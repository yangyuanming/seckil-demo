<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        <!--配置Spring MVC-->
      <!--  1、开启SpringMVC注解模式
        作用：简化配置：
            ①自动注册DefaultAnnotationHandlerMapping、AnnotationMethodHandlerAdapter

            ②提供一系列支持：数据绑定、xml和json读写、数字和日期的Format  @NumberFormat  @DataTimeFormat

       -->
    <mvc:annotation-driven/>
    <!-- servlet-mapping为"/",需要一个设置-->
        <!--2、静态资源默认servlet配置
        作用：①加入对静态资源的处理：jpg，js，png.在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，
                会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
                它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，
                就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，
                才由DispatcherServlet继续处理。
               ②允许使用"/"作为整体映射。不能用/*,/*匹配的是所有的请求路径和请求资源，而/匹配的只是路径，不会拦截对资源的请求。
        -->
    <mvc:default-servlet-handler/>

    <!--3、配置jsp  显示ViewResolver-->
    <bean id="viewResolver"  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property
                name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix"
                  value=".jsp"/>
    </bean>

    <!--4、扫描web相关的bean-->
    <context:component-scan base-package="com.yangyuanming.seckill.web"/>
</beans>